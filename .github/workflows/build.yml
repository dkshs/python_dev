name: Docker Image CI/CD

on:
  push:
    branches: [master]
    paths-ignore: ["README.md"]
  schedule:
    - cron: "0 0 * * 1"

jobs:
  linter:
    uses: ./.github/workflows/linter.yml

  generate-matrix:
    name: Generate build matrix
    runs-on: ubuntu-latest
    needs: [linter]
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Install dependencies
        run: |
          pip install uv
          uv pip install -r requirements.txt --system
      - name: Generate build matrix
        run: python -m build_versions.main --ci-matrix
        id: set-matrix

  build:
    name: Build python ${{ matrix.key }}
    runs-on: ubuntu-latest
    if: needs.generate-matrix.outputs.matrix != ''
    needs: [generate-matrix]
    strategy:
      matrix: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - run: |
          pip install uv
          uv pip install -r requirements.txt --system
      - name: Generate Dockerfile from config
        run: python -m build_versions.main --dockerfile-with-context '${{ toJSON(matrix) }}'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dockerfiles/${{ matrix.key }}.Dockerfile
          load: true
          tags: dkshs/python_dev:${{ matrix.key }}
      - name: Run smoke tests
        run: |
          docker run --rm dkshs/python_dev:${{ matrix.key }} sh -c "python --version && pip --version && uv --version"
      - name: Push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dockerfiles/${{ matrix.key }}.Dockerfile
          platforms: ${{ join(matrix.platforms) }}
          push: true
          tags: dkshs/python_dev:${{ matrix.key }}
